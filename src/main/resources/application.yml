spring:
  datasource:
    url: jdbc:mysql://localhost/devops_service?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: choerodon
    password: choerodon
  redis:
    host: localhost
  http:
    encoding:
     charset: UTF-8
     force: true
     enabled: true
    multipart:
     max-file-size: 30MB
     max-request-size: 30MB
services:
  harbor:
    baseUrl: "harbor.example.com"
    username: "123456"
    password: "123456"
    insecureSkipTlsVerify: false
    params: {}
  gitlab:
    url: "gitlab.example.com"
    sshUrl: "gitlab.example.com"
    password: 123456
    projectLimit: 100
  helm:
    url: "helm.example.com"
  sonarqube:
    url: "http://sonarqube.example.com"
  gateway:
    url: "http://api.example.com"
template:
  url: https://github.com/choerodon/choerodon-devops-templates.git
  version: 0.13.0
choerodon:
  saga:
    consumer:
      thread-num: 5  # 消费线程数
      poll-interval: 3 # 拉取消息的间隔(秒)，默认1秒
      enabled: true # 是否启用消费端
  schedule:
    consumer:
      enabled: true # 启用任务调度消费端
      thread-num: 1 # 任务调度消费线程数
      poll-interval-ms: 1000 # 拉取间隔，默认1000毫秒
  websocket:
    max-redis-msg-listener-concurrency: 500
    security: false
agent:
  version: "0.5.0"
  serviceUrl: "agent.example.com"
  certManagerUrl: "agent.example.com"
  repoUrl: "helm.example.com"
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
    registryFetchIntervalSeconds: 1
security:
  basic:
      enabled: false
  ignored: /ci,/webhook/**,/v2/api-docs,/agent/**,/ws/**
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true
feign:
  hystrix:
    shareSecurityContext: true
    command:
      default:
        execution:
          isolation:
            thread:
              timeoutInMilliseconds: 30000
ribbon:
  ConnectTimeout: 50000
  ReadTimeout: 50000

asgard-servie:
  ribbon:
    ConnectTimeout: 50000
    ReadTimeout: 50000

cert:
  testCert: false # 证书是否为测试证书
logging:
  level:
    io.choerodon.event.consumer: debug
  config: classpath:logback-spring.xml