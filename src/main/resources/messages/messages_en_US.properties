# DevopsEnvironmentValidator
error.env.stop.instanceExist=The instance already exists.Cannot stop the environment.
error.env.stop.serviceExist=The service already exists.Cannot stop the environment.
error.env.stop.IngressExist=The ingress already  exists.Cannot stop the environment.
# DevopsIngressValidator
error.ingress.name.notMatch=The ingress name does not match.
# DevopsServiceValidator
error.targetPort.illegal=Illegal target port.
error.port.illegal=Illegal port.
error.network.name.notMatch=The network name does not match.
error.externalIp.notMatch=The external IP does not match.
error.service.notContain.port=The ingress path's port not belong to the service.
# AppInstanceValidator
error.app.instance.name.notMatch=The app instance name does not match.
error.app.instance.name.already.exist=The app instance name already exist.
# ApplicationTemplateValidator
error.template.code.notMatch=The code for the template does not match.
# ApplicationValidator
error.app.code.notMatch=The code for the application does not match.
# ApplicationController
error.app.create=Failed to create the application.
error.application.query=Failed to query the application.
error.application.active=Failed to start/stop the application.
error.appTemplate.get=Failed to query the application by paging.
error.appName.query=Failed to query the name of application.
error.application.get=Failed to get the application.
error.applications.get=Failed to get the optional application.
error.template.get=Failed to get the template.
error.app.user.isSkipCheckPermission.get=Get app user isSkipCheckPermission error.
error.app.user.isSkipCheckPermission.update=Update app user isSkipCheckPermission error.
error.repository.token.invalid=Repository url or token invalid.
error.repository.empty=Repository is empty.
# DevopsServiceController
error.service.name.check=Failed to check the network name.
error.service.deploy=Failed to deploy the network.
error.app.k8s.service.update=Failed to update the network.
error.app.k8s.service.query=Failed to query the network.
error.app.k8s.service.env.query=Failed to query the network in the environment.
# DevopsIngressController
error.Ingress.query=Failed to query the ingress.
error.IngressName.query=Failed to query the ingress name.
error.ingress.check=Failed to check the ingress.
error.domain.name.check=Failed to check the ingress name.
# DevopsEnvPodContainerController
error.application.pod.query=Failed to query the pod.
# ApplicationVersionController
error.application.version.query=Failed to query the version of application.
# GitlabCommitController
error.gitlab.commit.query=Failed to query the commit in the gitlab.
# DevopsEnvironmentController
error.environment.create=Failed to create the environment.
error.service.environment.get=Failed to get the environment of network.
error.environment.get=Failed to get the environment.
error.shell.get=Failed to get the shell.
error.environment.active=Failed to stop/start the environment.
error.environment.query=Failed to query the single environment.
error.environment.update=Failed to update the environment.
error.environment.sort=Failed to sort the environment.
error.environment.running.get=Failed to get the running instance of environment.
error.env.delete=Delete environment error
# DevopsEnvPodContainerController
error.application.pod.get=Failed to get the logs.
error.application.shell.get=Failed to handle the shell.
# ApplicationInstanceController
error.instance.value.get=Failed to get the information of deployment.
error.values.query=Failed to get the information.
error.version.values.query=Failed to get the information of version.
error.application.deploy=Failed to deploy the application.
error.appInstance.query=Failed to query the running instance.
error.resource.query=Failed to get the resource.
error.stage.query=Failed to get the information of deployment on the hook stage.
error.instance.name.already.exist=App instance name already exist.
# ApplicationTemplateController
error.appTemplate.update=Failed to update the template on the organization.
# GitFlowController
error.branch.get=Failed to get the branch on the project.
error.branch.update=Failed to update the branch.
error.tag.get=Failed to get the tag on the application.
error.release.tag.get=Failed to get the tag of release.
error.hotfix.tag.get=Failed to get the tag of hotfix.
error.user.not.in.project=User not in this project
# ApplicationMarketController
error.market.release=Failed to release the application.
error.market.applications.get=Failed to query the application that published in the application market.
error.market.applications.query=Failed to query the application.
error.market.application.get=Failed to query the single application of detailed information.
error.market.application.versions.get=Failed to query the single application of version in the application market.
error.market.application.versions.query=Failed to query the single application of version in the application market by paging.
error.market.application.readme.get=Failed to query the README.
error.market.tgz.get=Failed to parse the application.
error.market.import=Failed to import the application.
# ProjectPipelineController
error.pipeline.query=Failed to query the pipeline.
error.pipeline.retry=Failed to retry the pipeline.
# CiController
error.file.get=Failed to get the information of CI.
# Impl
error.path.empty=Path is empty.
error.path.duplicated=The path already exists.
error.service.id.get=Failed to get the id of service.
error.service.select=Failed to get the service.
error.gitFlow.mergeConflict.master=Failed to merge with master.
error.container.notExist=The container doesn't exist.
error.pod.notExist=The pod doesn't exist.
error.instance.notRunning=Instance is not running.
error.instance.notStop=The instance is running.
error.instance.resource.not.found=The resource detail with type '{0}' of instance with id as {1} can not be found.
error.instance.resource.json.read.failed=The resource's json of instance with id as {0} failed to read, the original json is: {1}
error.publishLevel=Publishing level error.
error.app.check=Failed to check the application.
error.id.notMatch=Id does not match.
error.app.cannot.change=Applications cannot be changed.
error.project.query=Failed to query the project.
error.publishLevel.cannot.change=The release level cannot be changed.
error.file.empty=The file is empty.
error.zip.illegal=Illegal zip.
error.zip.empty=The zip is empty.
error.zip.notFound=The zip is not found.
error.image.read=Failed to read the image.
error.images.illegal=Illegal image.
error.version.insert=Failed to update the version.
error.git.clone=Git can't clone.
error.git.push=Git can't push.
error.directory.delete=Delete directory fail.
error.env.disconnect=Disconnect the environment.
error.param.render=Render param error.
error.rename.file=Rename file fail.
error.param.replace=Replace param error.
error.file.transfer=File transfer fail.
error.file.read=Read file fail.
error.file.rename=Rename file fail.
error.not.zip=Unzip fail.
error.zip.inputStream=Zip inputStream error.
error.outPath=File outpath error.
error.zip.outPutStream=Zip outputStream error.
error.project.get=Get project fail.
error.organization.get=Get organization fail.
error.message.insert=Insert message fail.
error.message.update=Update message fail.
error.log.insert=Insert log fail.
error.application.select=Select application fail.
error.branch.exist=Branch already exists.
error.tags.get=Get tags fail.
error.group.create=Create group fail.
error.file.create=Create file fail.
error.branch.create=Create branch fail.
error.app.market.check=Check app market error.
error.appMarket.project.unmatch=Application market is not in the project.
error.appMarket.instance.deployed=Deploy app market instance error.
error.version.notMatch=Version not match.
error.application.instance.create=Create application instance fail.
error.instance.update=Update application instance fail.
error.env.command.value.insert=Insert environment command value error.
error.domain.name.exist=The name of domain is existed.
error.domain.path.exist=The path of domain is existed.
domain.not.exist=Domain is not exist.
error.domain.insert=Insert domain fail.
error.domainAttr.insert=Insert domainAttr fail.
error.domainAttr.update=Update domainAttr fail.
error.resource.insert=Insert resource fail.
error.resource.update=Update resource fail.
error.service.app.instance.insert=Insert app instance fail.
error.name.exist=Name is existed.
error.code.exist=Code is existed.
error.app.publishedOrDeployed=Application has published or deployed.
error.insert.appTemplate=Insert app template fail.
error.update.appTemplate=Update app template fail.
error.appTemplate.select=Select app template fail.
error.k8s.service.create=Create k8s service fail.
error.k8s.service.update=Update k8s service fail.
error.env.command.insert=Insert environment command fail.
error.env.command.update=Update environment command fail.
error.payload.error=Payload error.
create.tag.wrong.branch=Create branch wrong.
error.version.values.notExist=Version's values.yaml not exist.
error.version.update=Update version failed.
error.user.not.owner=This user is not the project owner.
error.app.project.notMatch=The app do not belong to the project.
error.project.AppVersion.notExist=The application version is not exist on this project.
error.tag.delete=Failed to delete tag.
error.commitStatuse.select=Get commit statuse  fail.
error.projecthook.create=Failed to add projecthook.
error.issue.commit.get=Get issue commits fail.
error.issue.mergerequest.get=Get issue merge request fail.
error.issue.commit.mergerequest.count=Count issue commit and mergerequest error.
error.save.merge.request=Failed to save the merge request.
error.update.merge.request=Failed to update the merge request.
error.group.not.sync=Failed to sync group, you can not create app or env under the project
error.file.update=The file is not exist in the gitops repository please check.
error.user.not.env.pro.owner=This user is not the gitops repository project owner.
error.env.project.not.exist=Gitops env repository is not exist.
error.fileResource.not.exist=The releated file resource is not exist,pelase check.
error.gitlab.project.sync.failed=The related gitlab project failed, therefore this operation is not unavailable.
# CertificationController
error.certification.create=Create certification error.
error.certification.page=Page certification error.
error.certification.queryByDomain=Query active certification by domain error.
error.deploy.time.get=get deploy time failed.
error.deploy.frequency.get=get deploy frequency failed.
error.gitlab.commit.create=create gitlab commit failed.
# DevopsGitlabCommitController
error.commit.empty=The commit records is empty.
error.record.commit.get=Get recent commit records error.
error.user.get.byProjectId=Get user by project id error.
# DevopsEnvUserPermissionController
error.env.user.isSkipCheckPermission.get=Get env user isSkipCheckPermission error.
error.env.user.isSkipCheckPermission.update=Update env user isSkipCheckPermission error.
# GitlabProjectRepository
error.member.add=Add gitlab member error.
error.member.remove=Remove gitlab member error.
error.gitlabProjectId.not.exists=gitlab projectid not exists.
error.gitlab.groupId.select=create project failed, please check.
error.variable.batch.create=Failed to batch create variable
error.member.update= Failed to update member
# DevopsClusterController
error.cluster.delete=There are envs releated to ths cluster.
error.cluster.name.exist=the cluster name has exist.
error.devops.cluster.insert=create cluster failed.
error.cluster.code.exist=the cluster code has exist.
error.cluster.query=query cluster failed.
error.values.key.delete= can not delete values's key
error.node.pod.query=Can not query pods of node: {0}
# JsonYamlConversionUtil
error.json.to.yaml.failed=The conversion from json to yaml failed, and the original json is: {0}
error.yaml.to.json.failed=The conversion from yaml to json failed, and the original yaml is: {0}
# DevopsSecretContorller
error.secret.create=Create secret error.
error.secret.list=List secret error.
error.secret.delete=Delete secret error.
error.secret.query=Query secret error.
error.cert.name.exist = the cert name is exist
error.cert.related =  the cert has related other project cert
error.devops.cert.project.rel.add.error = insert devops cert project data failed
error.gitlab.user.sync.failed =  the iam user sync to gitlab user failed
error.gitops.file.not.exist = the gitops file not exist,please delete the object and create a new one
error.deploy.log.get=the instance deploy log get error
error.value.illegal = the deploy value is invalid
error.connect.env.query = get cluster's related envs failed
error.user.not.the.pro.authority = the user do not have the app related gitlab project's authority
error.user.get = get user attr failed
# DevopsAutoDeployController
error.auto.deploy.create=Failed to create auto deploy
error.auto.deploy.name.exist=auto deploy name already exist
error.auto.deploy.value.create=Failed to create auto deploy value
error.auto.deploy.value.update=Failed to update auto deploy value
error.auto.deploy.get=Failed to get auto deploy
error.auto.deploy.list=Failed to get auto deploy list
error.auto.deploy.query=Failed to query auto deploy
error.auto.deploy.record.get=Failed to get auto deploy record
error.auto.deploy.update=Failed to update auto deploy
error.auto.deploy.record.create.error=Failed to create auto deploy record
error.auto.deploy.record.update.error=Failed to update auto deploy record
error.auto.deploy.create.error=error to create auto deploy
error.auto.deploy.update.error=error to update auto deploy
error.value.is.empty=The value is empty 
#DevopsProjectConfigController
error.devops.project.config.get=Fail to get project config.
error.devops.project.config.create=Fail to create project config.
error.devops.project.config.update=Fail to update project config.
error.devops.project.config.delete=Fail to delete project config.
error.devops.project.config.name.with.projectId.already.exist=The name already exist in same project.
error.devops.project.config.list.by.options.get=Fail to get project config by pageRequest and search params.
error.devops.project.config.get.type=Failed to get project config by type
#ProjectConfigValidator
error.project.config.type=project config's type is wrong
error.app.check.failed=check app can disabled error
error.harbor.check=check harbor isUsable error
error.chart.check=check chart isUsable error
error.user.email.not.equal=user and email do not match
error.harbor.project.permission=the user you provide do not have the permission to the project,or the project is not exist
error.registry.secret.create.error=create registry secret failed
error.registry.secret.update.error=update registry secret failed
error.user.is.not.admin=the user is not admin
#DevopsGitlabEmailController
error.gitlab.user.email.check=Failed to check gitlab user's email
#CutomerContextUtil
context.set.error=Failed to set context
#DevopsCommandRunner
error.init.project.config=Failed to init project config
#RetrofitHandler
error.retrofit.handler.url=the config's url is wrong
error.harbor.user.password=the harbor's name or password is wrong
# GitlabUserRepositoryImpl
error.gitlab.user.create=Failed to create gitlab user