<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsServiceMapper">
    <select id="selectCountByOptions" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        devops_service ds,
        devops_application da
        WHERE
        ds.app_id = da.id
        AND ds.`name` = #{name}
        AND da.project_id = #{projectId}
        AND ds.env_id = #{envId}
        AND ds.`status` != 'deleted'
    </select>

    <select id="selectCountByName" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        (
        SELECT DISTINCT
        ds.id
        FROM
        (
        SELECT
        ds.*
        FROM
        devops_service ds
        INNER JOIN devops_env denv ON ds.env_id = denv.id
        WHERE
        denv.project_id = #{projectId}
        AND ds.`status` != 'deleted'
        <if test="envId != null">
            AND ds.env_id = #{envId}
        </if>
        ) ds
        JOIN devops_env de ON ds.env_id = de.id
        LEFT JOIN devops_application da ON da.id = ds.app_id
        LEFT JOIN devops_service_instance dsai ON dsai.service_id = ds.id
        LEFT JOIN devops_app_instance dai ON dai.id = dsai.app_instance_id
        WHERE
        1=1
        <include refid="sqlparam"/>
        ) t
    </select>

    <select id="listDevopsService" resultType="io.choerodon.devops.infra.dataobject.DevopsServiceQueryDO">
        SELECT
        ds.id,
        ds.`name`,
        ds.ports
        FROM
        devops_service ds
        WHERE ds.`status` = 'running'
        <if test="envId != null">
            AND ds.env_id = #{envId}
        </if>
    </select>

    <select id="listDevopsServiceByPage" resultMap="devopsServiceResult">
        SELECT
        ds.id,
        ds.`name`,
        ds.external_ip,
        ds.load_balance_ip,
        ds.ports,
        ds.`status`,
        ds.`type`,
        ds.labels,
        ds.end_points,
        da.id AS app_id,
        da.`name` AS app_name,
        de.id AS env_id,
        de.`name` AS env_name,
        de.`code` AS namespace,
        cmd.`status` commandStatus,
        cmd.command_type commandType,
        cmd.error error,
        da.project_id AS appProjectId,
        dsai.app_instance_id AS app_instance_id,
        dsai.code AS code,
        dai.`status` AS instance_status
        FROM
        (
        SELECT
        devs.*
        FROM
        devops_service devs
        INNER JOIN devops_env denv ON devs.env_id = denv.id
        WHERE
        denv.project_id = #{projectId}
        AND devs.`status` != 'deleted'
        <if test="envId != null">
            AND devs.env_id = #{envId}
        </if>
        <if test="sort != null and !sort.isEmpty()">
            ORDER BY ${sort}
        </if>
        <if test="start != null and size != null">
            LIMIT #{start}, #{size}
        </if>
        ) ds
        JOIN devops_env de ON ds.env_id = de.id
        LEFT JOIN devops_env_command cmd ON ds.command_id = cmd.id
        LEFT JOIN devops_application da ON da.id = ds.app_id
        LEFT JOIN devops_service_instance dsai ON dsai.service_id = ds.id
        LEFT JOIN devops_app_instance dai ON dai.id = dsai.app_instance_id
        WHERE 1
        <include refid="sqlparam"/>
    </select>

    <select id="selectById" resultMap="devopsServiceResult">
        SELECT
        ds.id,
        ds.`name`,
        ds.external_ip,
        ds.labels,
        da.project_id appProjectId,
        ds. ports,
        ds.end_points,
        ds.`status`,
        ds.`type`,
        da.id AS app_id,
        da.`name` AS app_name,
        de.id AS env_id,
        de.`name` AS env_name,
        dsai.app_instance_id AS app_instance_id,
        dai.`status` AS instance_status,
        dsai.code AS code
        FROM
        devops_service ds
        INNER JOIN devops_env de ON ds.env_id = de.id
        LEFT JOIN devops_service_instance dsai ON dsai.service_id = ds.id
        LEFT JOIN devops_app_instance dai ON dai.id = dsai.app_instance_id
        LEFT JOIN devops_application da ON da.id = dai.app_id
        WHERE
        ds.id = #{id}
        AND ds.`status` != 'deleted'
    </select>

    <select id="selectDeployedEnv" resultType="java.lang.Long">
        SELECT DISTINCT
        env_id
        FROM
        devops_service
        WHERE
        `status` = 'running';
    </select>

    <resultMap id="devopsServiceResult" type="io.choerodon.devops.infra.dataobject.DevopsServiceQueryDO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="externalIp" column="external_ip"/>
        <result property="ports" column="ports"/>
        <result property="status" column="status"/>
        <result property="appId" column="app_id"/>
        <result property="appName" column="app_name"/>
        <result property="appProjectId" column="appProjectId"/>
        <result property="loadBalanceIp" column="load_balance_ip"/>
        <result property="type" column="type"/>
        <result property="envId" column="env_id"/>
        <result property="commandStatus" column="commandStatus"/>
        <result property="commandType" column="commandType"/>
        <result property="error" column="error"/>
        <result property="envName" column="env_name"/>
        <result property="namespace" column="namespace"/>
        <result property="labels" column="labels"/>
        <result property="endPoints" column="end_points"/>
        <collection property="appInstance" ofType="io.choerodon.devops.infra.dataobject.ServiceInstanceDO">
            <result column="app_instance_id" property="id" jdbcType="VARCHAR"/>
            <result column="code" property="code" jdbcType="VARCHAR"/>
            <result column="instance_status" property="instanceStatus" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="sqlparam">
        <if test='searchParam != null'>
            <if test='searchParam.name != null and searchParam.name.size > 0'>
                AND
                <foreach collection="searchParam.name" item="name" open="(" separator=" OR " close=")">
                    ds.`name` LIKE CONCAT(CONCAT('%', #{name, jdbcType=VARCHAR}),'%')
                </foreach>
            </if>
            <if test='searchParam.appName != null and searchParam.appName.size > 0'>
                AND
                <foreach collection="searchParam.appName" item="appName" open="(" separator=" OR " close=")">
                    da.`name` LIKE CONCAT(CONCAT('%', #{appName, jdbcType=VARCHAR}),'%')
                </foreach>
            </if>
            <if test='searchParam.envName != null and searchParam.envName.size > 0'>
                AND
                <foreach collection="searchParam.envName" item="envName" open="(" separator=" OR " close=")">
                    de.`name` LIKE CONCAT(CONCAT('%', #{envName, jdbcType=VARCHAR}),'%')
                </foreach>
            </if>
            <if test='searchParam.envCode != null and searchParam.envCode.size > 0'>
                AND
                <foreach collection="searchParam.envCode" item="envCode" open="(" separator=" OR " close=")">
                    de.code LIKE CONCAT(CONCAT('%', #{envCode, jdbcType=VARCHAR}),'%')
                </foreach>
            </if>
            <if test='searchParam.externalIp != null and searchParam.externalIp.size > 0'>
                AND
                <foreach collection="searchParam.externalIp" item="externalIp" open="(" separator=" OR " close=")">
                    ds.external_ip LIKE CONCAT(CONCAT('%', #{externalIp, jdbcType=VARCHAR}),'%')
                </foreach>
            </if>
        </if>
        <if test='param != null and param != ""'>
            AND (ds.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            OR de.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            OR de.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            OR ds.external_ip LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%') )
        </if>
    </sql>

    <select id="checkEnvHasService" resultType="java.lang.Boolean">
        SELECT
        COUNT( 1 ) > 0 exist
        FROM
        devops_service
        WHERE
        env_id = #{envId}
        AND `status` != 'deleted';
    </select>

    <update id="setLablesToNull">
        UPDATE devops_service ds
        SET ds.labels = null
        WHERE ds.id = #{serviceId}
    </update>

    <update id="setEndPointToNull">
        UPDATE devops_service ds
        SET ds.end_points = null
        WHERE ds.id = #{serviceId}
    </update>

    <update id="setExternalIpNull">
        UPDATE devops_service ds
        SET ds.external_ip = null
        WHERE ds.id = #{serviceId}
    </update>

    <delete id="deleteServiceInstance">
        DELETE FROM devops_service_instance
        WHERE service_id IN
        <foreach collection="serviceIds" item="serviceId" open="(" separator="," close=")">
            #{serviceId}
        </foreach>
    </delete>
</mapper>
